{"version":3,"file":"static/js/4.d11008e4.chunk.js","mappings":"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","sources":["redux/contacts/selector.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 40px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n`;\nexport const Button = styled.button`\n  border: 2px solid #cb52fb;\n  border-radius: 4px;\n  font-size: 18px;\n  padding: 8px 12px;\n  margin-top: 20px;\n  box-shadow: 2px 3px 2px rgba(0, 0, 0, 0.1);\n  background-color: rgba(58, 255, 233, 0.5);\n\n  &:hover {\n    color: #3affe9;\n    background-color: #cb52fb;\n  }\n`;\nexport const ListItemWrapper = styled.div`\n  display: flex;\n  width: 650px;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selector';\nimport { List, ListItem, Button, ListItemWrapper } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const filteredList = contacts.filter(el =>\n    el.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n  );\n\n  return (\n    <>\n      <List>\n        {filteredList.map(contact => {\n          return (\n            <ListItem key={contact.id}>\n              <ListItemWrapper>\n                {contact.name}: {contact.number}\n                <Button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  Delete\n                </Button>\n              </ListItemWrapper>\n            </ListItem>\n          );\n        })}\n      </List>\n      \n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Span = styled.span`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const FilterInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  border: 2px solid #cb52fb;\n  background-color: rgba(203, 82, 251, 0.3);\n  box-shadow: 5px 7px 9px rgba(86, 33, 110, 0.3);\n  border-radius: 8px;\n  min-width: 550px;\n`;\n\nexport const Input = styled.input`\n  color: #010101;\n  padding: 4px;\n  /* margin-top: 10px; */\n  outline: none;\n  border: 2px solid #cb52fb;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 4px;\n  min-height: 30px;\n  width: 250px;\n  font-size: 18px;\n\n  &:focus {\n    outline: none;\n    border-color: #80a3f9;\n    box-shadow: 0 0 10px #80a3f9;\n    background-color: #fff;\n  }\n`;\n\nexport const WrapFilter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selector';\nimport { Span, FilterInput, Input, WrapFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  return (\n    <FilterInput>\n      <Span>Find contacts by name</Span>\n      <WrapFilter>\n        <SearchIcon sx={{ color: '#010101', fontSize: 30 }} />\n        <Input\n          type=\"search\"\n          name=\"filter\"\n          title=\"Filter\"\n          onChange={e => dispatch(setFilter(e.target.value))}\n          value={value}\n        />\n      </WrapFilter>\n    </FilterInput>\n  );\n};\n","import styled from 'styled-components';\nimport { Field as FormikField, Form as FormikForm } from 'formik';\n\nexport const Field = styled(FormikField)`\n  color: #010101;\n  padding: 4px;\n  margin-top: 10px;\n  outline: none;\n  border: 2px solid #cb52fb;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 4px;\n  min-height: 30px;\n  width: 250px;\n  font-size: 18px;\n\n  &:focus {\n    outline: none;\n    border-color: #80a3f9;\n    box-shadow: 0 0 10px #80a3f9;\n    background-color: #fff;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  background-color: rgba(203, 82, 251, 0.3);\n  box-shadow: 5px 7px 9px rgba(86, 33, 110, 0.3);\n  border: 2px solid #cb52fb;\n  border-radius: 8px;\n  width: 550px;\n  min-height: 150px;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n\n  &:not(:first-child) {\n    margin-top: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  max-width: 170px;\n  border: 2px solid #cb52fb;\n  border-radius: 4px;\n  font-size: 18px;\n  padding: 8px 12px;\n  margin-top: 20px;\n  box-shadow: 2px 3px 2px rgba(0, 0, 0, 0.1);\n  background-color: rgba(58, 255, 233, 0.5);\n\n  &:hover {\n    color: #3affe9;\n    background-color: #cb52fb;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport { selectContacts } from 'redux/contacts/selector';\nimport { Field, Form, Label, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (value, { resetForm }) => {\n    let isDuplicate = true;\n\n    contacts.map(\n      item =>\n        (isDuplicate = !item.name\n          .toLocaleLowerCase()\n          .includes(value.name.toLocaleLowerCase()))\n    );\n    if (isDuplicate) {\n      const contact = { name: value.name, number: value.number };\n      dispatch(addContact(contact));\n      resetForm();\n    } else {\n      alert(`${value.name} is already in contacts`);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label htmlFor=\"name\">Name</Label>\n          <Field\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n\n          <Label htmlFor=\"number\">Number</Label>\n          <Field\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n\n          <Button type=\"submit\">\n            <AddIcCallIcon />\n            Add contact\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'redux/contacts/selector';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        // height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50,\n        fontSize: 24,\n        color: '#010101',\n      }}\n    >\n      <h1\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          color: '#770e7e',\n          textShadow: '3px 2px 3px rgba(119, 14, 126, 0.2)',\n        }}\n      >\n        <ImportContactsIcon sx={{ fontSize: 70 }} />\n        Phonebook\n      </h1>\n      <ContactForm />\n\n      <h2\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: 8,\n          color: '#770e7e',\n          textShadow: '3px 2px 3px rgba(119, 14, 126, 0.2)',\n        }}\n      >\n        <ContactPhoneIcon sx={{ fontSize: 40 }} />\n        Contacts\n      </h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","List","styled","ListItem","Button","ListItemWrapper","ContactList","useSelector","dispatch","useDispatch","filteredList","el","name","toLocaleLowerCase","includes","map","contact","number","type","onClick","deleteContact","id","Span","FilterInput","Input","WrapFilter","Filter","value","Search","sx","color","fontSize","title","onChange","e","setFilter","target","Field","FormikField","Form","FormikForm","Label","ContactForm","initialValues","onSubmit","resetForm","isDuplicate","item","addContact","alert","htmlFor","placeholder","pattern","required","AddIcCall","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","marginTop","textShadow","ImportContacts","gap","ContactPhone"],"sourceRoot":""}